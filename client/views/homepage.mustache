<html>
<head> 
    <title>
        Sole-city
    </title>
    <link rel="stylesheet" href="/index.css">
    <link rel="stylesheet" href="/post.css">
    <link rel="stylesheet" href="/header.css">
    <link rel="stylesheet" href="/chatRoomWidget.css">
    <link rel="stylesheet" href="/chatWindow.css">
    <script src="https://unpkg.com/htmx.org@1.9.12/dist/htmx.js" integrity="sha384-qbtR4rS9RrUMECUWDWM2+YGgN3U4V4ZncZ0BvUcg9FGct0jqXz3PUdVpU1p0yrXS" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src='https://unpkg.com/maplibre-gl@latest/dist/maplibre-gl.js'></script>
    <link href='https://unpkg.com/maplibre-gl@latest/dist/maplibre-gl.css' rel='stylesheet' />
    <script>
    //initialising socket
      window.socket = io();

      socket.on('connect', () => {
        console.log('Connected with id:', socket.id);
      });

      socket.on('your-server-event', (data) => {
        // Handle incoming messages, update DOM manually or trigger HTMX swaps
      });

      // send messages as needed
      socket.emit('your-client-event', { /* data */});
        
        //handling status codes
      document.addEventListener("DOMContentLoaded", (event) => {
        document.body.addEventListener('htmx:beforeSwap', function(evt) {
          if (evt.detail.xhr.status === 422) {
            evt.detail.shouldSwap = true;
            evt.detail.isError = false;
          }
          if (evt.detail.xhr.status === 404) {
            evt.detail.shouldSwap = true;
            evt.detail.isError = false;
          }
        });
      });

      document.addEventListener("DOMContentLoaded", (event) => {
        document.body.addEventListener('htmx:afterSwap', function(evt) {
            if(evt.target.classList.contains('chat-section') && evt.target.firstChild.classList.contains('chat-window')){
                const chatRoomID = document.querySelector('.chat-window').dataset.chatroomid;
                console.log('joined chatRoom : ',chatRoomID);
                socket.emit('joinRoom',chatRoomID)

                const chatInputForm = document.getElementById('chatForm');
                const messageInput = document.getElementById('messageText');
                const senderID = document.querySelector('.chat-window').dataset.senderid;
                console.log(senderID);

                function displayMessage(obj){
                        const displaySection = document.getElementById('chat-messages-display-section');
                        const div = document.createElement('div');
                        div.textContent= obj.chat_message;

                        if(obj.senderID == senderID){
                            div.classList.add('sent');
                        }
                        else{ div.classList.add('received');}
                        displaySection.append(div);

                    };

                chatInputForm.addEventListener('submit',(event) => { 
                        event.preventDefault();
                        const message = messageInput.value;
                        if(message === '') return;
                        displayMessage({chat_room_id:chatRoomID,chat_message:message,senderID:senderID});
                        socket.emit('sendMessage',{chat_room_id:chatRoomID,chat_message:message,senderID:senderID});
                        messageInput.value="";
                    })

                socket.on('receiveMessage',(obj)=>{
                        displayMessage(obj);
                    })

                }
        });
      });
// handling the reapplication of handleFormSubmit script after swaps
        document.body.addEventListener('htmx:afterSwap', function(evt) {
          // Check if the swapped area contains your form
          const chatInputForm = document.getElementById('chatForm');
    const messageInput = document.getElementById('messageText');

          if (chatInputForm) {
            chatInputForm.addEventListener('submit', function(event) {
                event.preventDefault();
                const message = messageInput.value;
                if(message === '') return;
                displayMessage({chat_room_id:chatRoomID,chat_message:message,senderID:senderID});
                socket.emit('sendMessage',{chat_room_id:chatRoomID,chat_message:message,senderID:senderID});
                messageInput.value="";

            });
          }
        });
    </script> 

</head>


<body>
{{> header }}
<div class="page">
    <div class="map-container ">
        <div class="map hidden">
        <div id='map'></div>
        <script>
        var map = new maplibregl.Map({
          container: 'map',
          style: 'https://demotiles.maplibre.org/style.json', // stylesheet location
          center: [-74.5, 40], // starting position [lng, lat]
          zoom: 9 // starting zoom
        });
        </script> 
        </div>
        <button class="draw-map"> > </button>
    </div>
    <div class ="left-sidebar"> 
        <div class="chat-section"
            hx-get="/chat"
            hx-swap="innerHTML"
            hx-trigger="load">
            <div class="chatRooms"> 
            </div>
        </div>
    </div>
    <div class="trailwall" 
        hx-get="/trailwall"
        hx-trigger="load"
        hx-swap="innerHTML">
    </div>
    <div class= "right-sidebar">
        <div class="cities">
            Joined Cities:
            <div class="selectCity"
                 hx-get="/joinedCities"
                 hx-trigger="load"
                 hx-swap="innerHTML"
                 hx-target=".selectCity">
                 
             </div>
        </div>
        <div class="alerts-section"
            hx-get="/alerts"
            hx-trigger="load"
            hx-swap="innerHTML">
        </div>
        <div class="resources-section">
            Saved Resources
        </div>
    </div>
</div>
</body>
<script>
function onClickMapDrawer(){
    let button = document.getElementsByClassName("draw-map")[0];
    let mapContainer = document.getElementsByClassName("map")[0];

    if(mapContainer.classList.contains('hidden')){
        mapContainer.style.display = 'block';
        mapContainer.classList.remove('hidden');
        button.innerHTML = '<';
    } else {
        mapContainer.style.display = 'none';
        mapContainer.classList.add('hidden');
        button.innerHTML = '>';
    }
}

document.getElementsByClassName('draw-map')[0].addEventListener("click", onClickMapDrawer);
</script>

</html>
